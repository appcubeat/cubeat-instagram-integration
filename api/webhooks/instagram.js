export default async function handler(req, res) {
  // --- GET-–≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è –æ—Ç Facebook/Instagram ---
  if (req.method === 'GET') {
    const challenge = req.query['hub.challenge'] || '';
    console.log('VERIFICATION GET:', req.url, '‚Üí', challenge);
    return res.status(200).send(challenge);
  }

  // --- POST ‚Äî —Ä–µ–∞–ª—å–Ω—ã–π –≤–µ–±—Ö—É–∫ –æ—Ç Instagram ---
  if (req.method === 'POST') {
    try {
      const payload = req.body;               // –≤–µ—Å—å –æ–±—ä–µ–∫—Ç entry/changes
      console.log('üéâ POST payload received:', JSON.stringify(payload));

      // –≤—ã–Ω–∏–º–∞–µ–º —Å–∞–º–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
      const changes = payload.entry?.[0]?.changes;
      if (Array.isArray(changes)) {
        for (const ch of changes) {
          if (ch.field === 'messages') {
            const msg = ch.value;

            // —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ Base44 –∫–∞–∫ –Ω–æ–≤—É—é ChatMessage
            await fetch(
              `${process.env.BASE44_API_URL}/entities/ChatMessage`,
              {
                method: 'POST',
                headers: {
                  'Content-Type':  'application/json',
                  'api_key':       process.env.BASE44_API_TOKEN
                },
                body: JSON.stringify({
                  client_id:          msg.recipient.id,
                  instagram_user_id:  msg.sender.id,
                  instagram_message_id: msg.message.mid,
                  direction:          'incoming',
                  message_text:       msg.message.text,
                  timestamp:          parseInt(msg.timestamp, 10)
                })
              }
            );
            console.log('‚úÖ Forwarded to Base44 ChatMessage');
          }
        }
      }

      return res.status(200).send('EVENT_RECEIVED');
    } catch (err) {
      console.error('‚ùå Error forwarding to Base44:', err);
      return res.status(500).send('SERVER_ERROR');
    }
  }

  return res.status(405).send('Method Not Allowed');
}
